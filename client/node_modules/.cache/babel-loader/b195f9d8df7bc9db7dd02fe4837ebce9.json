{"ast":null,"code":"var _jsxFileName = \"/home/carina/priv/trot-race-simulator/client/src/App.jsx\";\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport _ from 'underscore';\nimport './style.scss';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startResponse: false,\n      finishResponse: false,\n      endpoint: \"http://127.0.0.1:4001\"\n    };\n  }\n\n  componentWillMount() {\n    const {\n      endpoint\n    } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"StartHorses\", dataA => this.setState({\n      startResponse: dataA\n    }));\n    socket.on(\"FinishHorses\", dataB => this.setState({\n      finishResponse: dataB\n    }));\n  }\n\n  componentDidMount() {// console.log('startResponse', this.state.startResponse);\n    // console.log('finishResponse', this.state.finishResponse);\n  }\n\n  componentDidUpdate(prevState) {} // If we have a new update\n  // if (!this.featuresEqual(prevState.startResponse, this.state.startResponse)) {\n  // }\n  // featuresEqual(a, b) {\n  //   const comparable = (features) => features\n  //       .slice()\n  //       .sort()\n  //       .join(',');\n  //   return comparable(a) === comparable(b);\n  // }\n\n\n  getTableData(data) {\n    return Object.keys(data.sort(this.compare)).map(function (key) {\n      const id = data[key].horse.name.replace(' ', '-');\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        id: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, data[key].horse.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, data[key].horse.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, data[key].time > 0 ? data[key].time : ''));\n    });\n  }\n\n  renderTableData() {\n    const {\n      startResponse\n    } = this.state;\n\n    if (startResponse && startResponse[0].event === 'start') {\n      this.getTableData(startResponse);\n    }\n\n    return;\n  }\n\n  updateTableData() {\n    const horses = this.state.startResponse;\n    const finishHorse = this.state.finishResponse;\n    const id = data[key].horse.name.replace(' ', '-');\n\n    let filtered = _.filter(horses, function (item) {\n      console.log('item', item);\n      return item.horse.id !== finishHorse.horse.id;\n    });\n\n    filtered.push(finishHorse);\n    const data = this.getTableData(filtered); // Get the first child node of an <ul> element\n\n    var elmt = document.getElementById(id).childNodes[0]; // Replace the first child node of <ul> with the newly created text node\n\n    elmt.replaceChild(data, elmt.childNodes[0]); // console.log('horses', horses);\n    // console.log('filtered', filtered);\n\n    console.log('filtered', filtered);\n\n    if (finishHorse && finishHorse.horse.name) {\n      // for(let i = 0; i < horses.lenght; i++ ){\n      //   if (horses[i].name === finishHorse.horse.name) {\n      //     console.log('this horse', horses[i].name, ' : ',  finishHorse.horse.name )\n      //   }\n      // }\n      const result = horses.find(({\n        name\n      }) => name === finishHorse.horse.name); // console.log('result', result);\n    } // console.log('horses',horses);\n    // 4:\n    //   event: \"start\"\n    //   horse: {id: 1, name: \"Isabell Altenwerth\"}\n    // time: 13480\n    // console.log('finish horse', finishHorse);\n    // event: \"finish\"\n    // horse: {id: \"2\", name: \"Alfredo Mraz\"}\n    // time: 7710\n\n  } // Not used??\n  // renderData() {\n  //   const { horses } = this.state;\n  //   return Object.keys(horses).map(function(key) {\n  //     const id = horses[key].horse.name.replace(' ', '-');\n  //     return (\n  //       <tr key={key} ref={id}>\n  //           <td>{horses[key].horse.id}</td>\n  //           <td>{horses[key].horse.name}</td>\n  //           <td>{horses[key].time}</td>\n  //           {/* <td>{getTimeInSeconds(horses[key].time)}</td> */}\n  //       </tr>\n  //     )\n  //   });\n  // }\n\n\n  getTimeInSeconds(time) {}\n\n  compare(a, b) {\n    const timeA = a.time;\n    const timeB = b.time;\n    let comparison = 0;\n\n    if (timeA > timeB) {\n      comparison = 1;\n    } else if (timeA < timeB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  } // isClientMode() {\n  //   return typeof(ENVIRONMENT) != 'undefined' && ENVIRONMENT === 'client';\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Horse\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \"Time\")), this.state.startResponse && this.renderTableData(), this.state.finishResponse && this.updateTableData())));\n  }\n\n}\n\nexport default App; // const tifOptions = Object.keys(tifs).map(key =>\n//   <option value={key}>{tifs[key]}</option>\n// )\n// {Object.keys(yourObject).map(function(key) {\n//   return <div>Key: {key}, Value: {yourObject[key]}</div>;\n// })}","map":{"version":3,"sources":["/home/carina/priv/trot-race-simulator/client/src/App.jsx"],"names":["React","socketIOClient","_","App","Component","constructor","state","startResponse","finishResponse","endpoint","componentWillMount","socket","on","dataA","setState","dataB","componentDidMount","componentDidUpdate","prevState","getTableData","data","Object","keys","sort","compare","map","key","id","horse","name","replace","time","renderTableData","event","updateTableData","horses","finishHorse","filtered","filter","item","console","log","push","elmt","document","getElementById","childNodes","replaceChild","result","find","getTimeInSeconds","a","b","timeA","timeB","comparison","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport _ from 'underscore';\nimport './style.scss';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startResponse: false,\n      finishResponse: false,\n      endpoint: \"http://127.0.0.1:4001\",\n    };\n  }\n\n  componentWillMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"StartHorses\", dataA => this.setState({ startResponse: dataA }));\n    socket.on(\"FinishHorses\", dataB => this.setState({ finishResponse: dataB }));\n\n\n  }\n  componentDidMount() {\n\n\n\n\n    // console.log('startResponse', this.state.startResponse);\n    // console.log('finishResponse', this.state.finishResponse);\n  }\n\n  componentDidUpdate(prevState) {\n    // If we have a new update\n    // if (!this.featuresEqual(prevState.startResponse, this.state.startResponse)) {\n\n    // }\n\n  }\n\n  // featuresEqual(a, b) {\n  //   const comparable = (features) => features\n  //       .slice()\n  //       .sort()\n  //       .join(',');\n\n  //   return comparable(a) === comparable(b);\n  // }\n\n  getTableData(data){\n    return Object.keys(data.sort(this.compare)).map(function(key) {\n      const id = data[key].horse.name.replace(' ', '-');\n      return (\n        <tr key={key} id={id}>\n            <td>{data[key].horse.id}</td>\n            <td>{data[key].horse.name}</td>\n            <td>{data[key].time > 0 ? data[key].time : ''}</td>\n        </tr>\n      )\n    });\n\n  }\n\n  renderTableData() {\n    const { startResponse } = this.state;\n\n    if (startResponse && startResponse[0].event === 'start') {\n      this.getTableData(startResponse);\n    }\n    return;\n  }\n\n  updateTableData() {\n    const horses = this.state.startResponse;\n    const finishHorse = this.state.finishResponse;\n    const id = data[key].horse.name.replace(' ', '-');\n\n    let filtered = _.filter(horses, function(item) {\n      console.log('item', item);\n      return item.horse.id !== finishHorse.horse.id;\n    });\n\n    filtered.push(finishHorse);\n    const data = this.getTableData(filtered);\n\n    // Get the first child node of an <ul> element\n    var elmt = document.getElementById(id).childNodes[0];\n\n    // Replace the first child node of <ul> with the newly created text node\n    elmt.replaceChild(data, elmt.childNodes[0]);\n\n\n\n\n    // console.log('horses', horses);\n    // console.log('filtered', filtered);\n\n    console.log('filtered', filtered);\n\n\n\n\n    if (finishHorse && finishHorse.horse.name) {\n\n      // for(let i = 0; i < horses.lenght; i++ ){\n      //   if (horses[i].name === finishHorse.horse.name) {\n      //     console.log('this horse', horses[i].name, ' : ',  finishHorse.horse.name )\n      //   }\n      // }\n\n\n      const result = horses.find( ({ name }) => name === finishHorse.horse.name);\n\n      // console.log('result', result);\n    }\n\n    // console.log('horses',horses);\n    // 4:\n    //   event: \"start\"\n    //   horse: {id: 1, name: \"Isabell Altenwerth\"}\n      // time: 13480\n    // console.log('finish horse', finishHorse);\n    // event: \"finish\"\n    // horse: {id: \"2\", name: \"Alfredo Mraz\"}\n    // time: 7710\n  }\n\n  // Not used??\n  // renderData() {\n  //   const { horses } = this.state;\n\n  //   return Object.keys(horses).map(function(key) {\n  //     const id = horses[key].horse.name.replace(' ', '-');\n  //     return (\n  //       <tr key={key} ref={id}>\n  //           <td>{horses[key].horse.id}</td>\n  //           <td>{horses[key].horse.name}</td>\n  //           <td>{horses[key].time}</td>\n  //           {/* <td>{getTimeInSeconds(horses[key].time)}</td> */}\n  //       </tr>\n  //     )\n  //   });\n  // }\n\n  getTimeInSeconds(time) {\n\n  }\n  compare(a, b) {\n    const timeA = a.time;\n    const timeB = b.time;\n\n    let comparison = 0;\n    if (timeA > timeB) {\n      comparison = 1;\n    } else if (timeA < timeB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n  // isClientMode() {\n  //   return typeof(ENVIRONMENT) != 'undefined' && ENVIRONMENT === 'client';\n  // }\n\n  render() {\n    return (\n        <div>\n          <table id='results'>\n            <tbody>\n              <tr>\n                <th>No</th>\n                <th>Horse</th>\n                <th>Time</th>\n              </tr>\n              {this.state.startResponse &&\n                this.renderTableData()\n              }\n              {this.state.finishResponse &&\n                this.updateTableData()\n              }\n            </tbody>\n          </table>\n        </div>\n    );\n  }\n}\nexport default App;\n\n\n// const tifOptions = Object.keys(tifs).map(key =>\n//   <option value={key}>{tifs[key]}</option>\n// )\n\n// {Object.keys(yourObject).map(function(key) {\n//   return <div>Key: {key}, Value: {yourObject[key]}</div>;\n// })}\n"]},"metadata":{},"sourceType":"module"}