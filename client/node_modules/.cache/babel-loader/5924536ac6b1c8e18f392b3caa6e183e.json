{"ast":null,"code":"var _jsxFileName = \"/home/carina/priv/trot-race-simulator/client/src/result/RacingResults.jsx\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nexport class Result extends React.Component {\n  componentDidMount() {\n    const {\n      endpoint\n    } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"FromAPI\", data => this.setState({\n      response: data\n    }));\n    console.log('mounted!');\n    console.log('state', this.state.response);\n  }\n\n  componentDidUpdate(prevState) {\n    const resp = this.state.response;\n    const horsies = this.state.horses;\n    const horse = this.horses.push(resp);\n    this.setState({\n      horses: horse\n    });\n    console.log('horseList', this.state.horses);\n    console.log('updating...');\n    console.log('prevState', prevState);\n    console.log('state', this.state.response); // If we have a new update\n    // if (!this.featuresEqual(prevState.response, this.state.response)) {\n    // }\n  }\n\n  featuresEqual(a, b) {\n    const comparable = features => features.slice().sort().join(',');\n\n    return comparable(a) === comparable(b);\n  }\n\n  renderTableData() {\n    const {\n      response\n    } = this.state;\n    console.log('response', response); // {Object.keys(response.horse).map(function(key) {\n    //   // TODO:\n    //    if (typeof key === 'object') {}\n    //   return <div key={key}> Key value is {key}, and Value is {response[key]} </div>\n    // })}\n\n    {\n      /* The temperature in Florence is: {response} °F */\n    }\n\n    if (response) {\n      return Object.keys(response.sort(this.compare)).map(function (key) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }, response[key].horse.id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }, response[key].horse.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }, response[key].time > 0 ? response[key].time : ''));\n      });\n    } else {\n      return;\n    }\n  }\n\n  renderData() {\n    const {\n      response,\n      horses\n    } = this.state;\n    console.log('horses', horses);\n    console.log('response', response);\n    return Object.keys(horses).map(function (key) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, horses[key].horse.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, horses[key].horse.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, horses[key].time > 0 ? horses[key].time : ''));\n    });\n  }\n\n  compare(a, b) {\n    const timeA = a.time;\n    const timeB = b.time;\n    let comparison = 0;\n\n    if (timeA > timeB) {\n      comparison = 1;\n    } else if (timeA < timeB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n}","map":{"version":3,"sources":["/home/carina/priv/trot-race-simulator/client/src/result/RacingResults.jsx"],"names":["React","Component","socketIOClient","Result","componentDidMount","endpoint","state","socket","on","data","setState","response","console","log","componentDidUpdate","prevState","resp","horsies","horses","horse","push","featuresEqual","a","b","comparable","features","slice","sort","join","renderTableData","Object","keys","compare","map","key","id","name","time","renderData","timeA","timeB","comparison"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\n\nexport class Result extends React.Component {\n\ncomponentDidMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"FromAPI\", data => this.setState({ response: data }));\n    console.log('mounted!')\n    console.log('state', this.state.response);\n  }\n\n  componentDidUpdate(prevState) {\n    const resp = this.state.response;\n    const horsies = this.state.horses;\n    const horse = this.horses.push(resp)\n    this.setState({\n      horses: horse\n    })\n\n\n\n      console.log('horseList', this.state.horses);\n\n\n\n    console.log('updating...');\n    console.log('prevState', prevState);\n    console.log('state', this.state.response);\n    // If we have a new update\n    // if (!this.featuresEqual(prevState.response, this.state.response)) {\n\n    // }\n\n  }\n  featuresEqual(a, b) {\n    const comparable = (features) => features\n        .slice()\n        .sort()\n        .join(',');\n\n    return comparable(a) === comparable(b);\n  }\n\n  renderTableData() {\n    const { response } = this.state;\n    console.log('response', response);\n\n    // {Object.keys(response.horse).map(function(key) {\n    //   // TODO:\n    //    if (typeof key === 'object') {}\n\n    //   return <div key={key}> Key value is {key}, and Value is {response[key]} </div>\n    // })}\n    {/* The temperature in Florence is: {response} °F */}\n\n    if (response) {\n      return Object.keys(response.sort(this.compare)).map(function(key) {\n        return (\n          <tr key={key}>\n              <td>{response[key].horse.id}</td>\n              <td>{response[key].horse.name}</td>\n              <td>{response[key].time > 0 ? response[key].time : ''}</td>\n          </tr>\n        )\n      });\n    } else {\n      return;\n    }\n\n  }\n\n  renderData() {\n    const { response, horses } = this.state;\n    console.log('horses', horses);\n    console.log('response', response);\n\n    return Object.keys(horses).map(function(key) {\n      return (\n        <tr key={key}>\n            <td>{horses[key].horse.id}</td>\n            <td>{horses[key].horse.name}</td>\n            <td>{horses[key].time > 0 ? horses[key].time : ''}</td>\n        </tr>\n      )\n    });\n  }\n  compare(a, b) {\n    const timeA = a.time;\n    const timeB = b.time;\n\n    let comparison = 0;\n    if (timeA > timeB) {\n      comparison = 1;\n    } else if (timeA < timeB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}