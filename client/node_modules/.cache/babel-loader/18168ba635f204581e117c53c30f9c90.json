{"ast":null,"code":"var _jsxFileName = \"/home/carina/priv/trot-race-simulator/client/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport _ from 'underscore';\nimport './style.scss';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startResponse: false,\n      finishResponse: false,\n      endpoint: \"http://127.0.0.1:4001\",\n      horses: []\n    };\n  }\n\n  componentWillMount() {\n    const {\n      endpoint\n    } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"StartHorses\", dataA => this.setState({\n      startResponse: dataA\n    }));\n    socket.on(\"FinishHorses\", dataB => this.setState({\n      finishResponse: dataB\n    }));\n  }\n\n  componentDidMount() {// console.log('startResponse', this.state.startResponse);\n    // console.log('finishResponse', this.state.finishResponse);\n  }\n\n  componentDidUpdate(prevState) {\n    const {\n      endpoint\n    } = this.state;\n    const socket = socketIOClient(endpoint);\n    const resp = this.state.startResponse; // If we have a new update\n    // if (!this.featuresEqual(prevState.startResponse, this.state.startResponse)) {\n    // }\n  } // featuresEqual(a, b) {\n  //   const comparable = (features) => features\n  //       .slice()\n  //       .sort()\n  //       .join(',');\n  //   return comparable(a) === comparable(b);\n  // }\n\n\n  renderTableData() {\n    const {\n      startResponse\n    } = this.state;\n\n    if (startResponse && startResponse[0].event === 'start') {\n      return Object.keys(startResponse.sort(this.compare)).map(function (key) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }, startResponse[key].horse.id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }, startResponse[key].horse.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }, startResponse[key].time > 0 ? startResponse[key].time : ''));\n      });\n    }\n\n    return;\n  }\n\n  updateTableData() {\n    const horses = this.state.startResponse;\n    const finishHorse = this.state.finishResponse;\n    console.log('Finsih HORSE:', finishHorse);\n\n    if (finishHorse && finishHorse.horse.name) {\n      for (let i = 0; i < horses.lenght; i++) {\n        if (horses[i].name === finishHorse.horse.name) {\n          console.log('this horse', horses[i].name, ' : ', finishHorse.horse.name);\n        }\n      }\n\n      const result = horses.find(({\n        name\n      }) => name === finishHorse.horse.name);\n      console.log('result', result);\n    } // console.log('horses',horses);\n    // 4:\n    //   event: \"start\"\n    //   horse: {id: 1, name: \"Isabell Altenwerth\"}\n    // time: 13480\n    // console.log('finish horse', finishHorse);\n    // event: \"finish\"\n    // horse: {id: \"2\", name: \"Alfredo Mraz\"}\n    // time: 7710\n\n  } // Not used??\n\n\n  renderData() {\n    const {\n      horses\n    } = this.state;\n    return Object.keys(horses).map(function (key) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, horses[key].horse.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, horses[key].horse.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, horses[key].time));\n    });\n  }\n\n  getTimeInSeconds(time) {}\n\n  compare(a, b) {\n    const timeA = a.time;\n    const timeB = b.time;\n    let comparison = 0;\n\n    if (timeA > timeB) {\n      comparison = 1;\n    } else if (timeA < timeB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \"Horse\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Time\")), this.state.startResponse && this.renderTableData(), this.state.finishResponse && this.updateTableData())));\n  }\n\n}\n\nexport default App; // const tifOptions = Object.keys(tifs).map(key =>\n//   <option value={key}>{tifs[key]}</option>\n// )\n// {Object.keys(yourObject).map(function(key) {\n//   return <div>Key: {key}, Value: {yourObject[key]}</div>;\n// })}","map":{"version":3,"sources":["/home/carina/priv/trot-race-simulator/client/src/App.jsx"],"names":["React","Component","socketIOClient","_","App","constructor","state","startResponse","finishResponse","endpoint","horses","componentWillMount","socket","on","dataA","setState","dataB","componentDidMount","componentDidUpdate","prevState","resp","renderTableData","event","Object","keys","sort","compare","map","key","horse","id","name","time","updateTableData","finishHorse","console","log","i","lenght","result","find","renderData","getTimeInSeconds","a","b","timeA","timeB","comparison","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport _ from 'underscore';\nimport './style.scss';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startResponse: false,\n      finishResponse: false,\n      endpoint: \"http://127.0.0.1:4001\",\n      horses: [],\n    };\n  }\n\n  componentWillMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"StartHorses\", dataA => this.setState({ startResponse: dataA }));\n    socket.on(\"FinishHorses\", dataB => this.setState({ finishResponse: dataB }));\n\n\n  }\n  componentDidMount() {\n\n\n\n\n    // console.log('startResponse', this.state.startResponse);\n    // console.log('finishResponse', this.state.finishResponse);\n  }\n\n  componentDidUpdate(prevState) {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    const resp = this.state.startResponse;\n\n\n    // If we have a new update\n    // if (!this.featuresEqual(prevState.startResponse, this.state.startResponse)) {\n\n    // }\n\n  }\n\n  // featuresEqual(a, b) {\n  //   const comparable = (features) => features\n  //       .slice()\n  //       .sort()\n  //       .join(',');\n\n  //   return comparable(a) === comparable(b);\n  // }\n\n  renderTableData() {\n    const { startResponse } = this.state;\n\n    if (startResponse && startResponse[0].event === 'start') {\n      return Object.keys(startResponse.sort(this.compare)).map(function(key) {\n        return (\n          <tr key={key}>\n              <td>{startResponse[key].horse.id}</td>\n              <td>{startResponse[key].horse.name}</td>\n              <td>{startResponse[key].time > 0 ? startResponse[key].time : ''}</td>\n          </tr>\n        )\n      });\n    }\n    return;\n  }\n  updateTableData() {\n    const horses = this.state.startResponse;\n    const finishHorse = this.state.finishResponse;\n    console.log('Finsih HORSE:', finishHorse);\n\n    if (finishHorse && finishHorse.horse.name) {\n\n      for(let i = 0; i < horses.lenght; i++ ){\n        if (horses[i].name === finishHorse.horse.name) {\n          console.log('this horse', horses[i].name, ' : ',  finishHorse.horse.name )\n        }\n      }\n\n\n      const result = horses.find( ({ name }) => name === finishHorse.horse.name);\n\n      console.log('result', result);\n    }\n\n    // console.log('horses',horses);\n    // 4:\n    //   event: \"start\"\n    //   horse: {id: 1, name: \"Isabell Altenwerth\"}\n      // time: 13480\n    // console.log('finish horse', finishHorse);\n    // event: \"finish\"\n    // horse: {id: \"2\", name: \"Alfredo Mraz\"}\n    // time: 7710\n  }\n\n  // Not used??\n  renderData() {\n    const { horses } = this.state;\n\n    return Object.keys(horses).map(function(key) {\n      return (\n        <tr key={key}>\n            <td>{horses[key].horse.id}</td>\n            <td>{horses[key].horse.name}</td>\n            <td>{horses[key].time}</td>\n            {/* <td>{getTimeInSeconds(horses[key].time)}</td> */}\n        </tr>\n      )\n    });\n  }\n\n  getTimeInSeconds(time) {\n\n  }\n  compare(a, b) {\n    const timeA = a.time;\n    const timeB = b.time;\n\n    let comparison = 0;\n    if (timeA > timeB) {\n      comparison = 1;\n    } else if (timeA < timeB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n  render() {\n    return (\n        <div>\n          <table id='results'>\n            <tbody>\n              <tr>\n                <th>No</th>\n                <th>Horse</th>\n                <th>Time</th>\n              </tr>\n              {this.state.startResponse &&\n                this.renderTableData()\n              }\n              {this.state.finishResponse &&\n                this.updateTableData()\n              }\n            </tbody>\n          </table>\n        </div>\n    );\n  }\n}\nexport default App;\n\n\n// const tifOptions = Object.keys(tifs).map(key =>\n//   <option value={key}>{tifs[key]}</option>\n// )\n\n// {Object.keys(yourObject).map(function(key) {\n//   return <div>Key: {key}, Value: {yourObject[key]}</div>;\n// })}\n"]},"metadata":{},"sourceType":"module"}